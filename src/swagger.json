{
  "openapi": "3.0.0",
  "info": {
    "title": "LMS Documentation",
    "description": "This is an API Rent",
    "version": "1.0.0",
    "contact": {
      "email": "antonio@develonsystems.com.br"
    }
  },
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Authenticate"
        ],
        "summary": "Login in application",
        "description": "Login in application",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {},
              "example": {
                "email": "teste@mail.com",
                "password": "12345"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Incorrect email or password"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by id",
        "description": "Get user by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "int"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "User no exists"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user",
        "description": "Delete user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "int"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "500": {
            "description": "User no exists"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "description": "Get all users",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user",
        "description": "Create a new user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/User"
              },
              "example": {
                "name": "teste",
                "email": "teste@mail.com",
                "password": "12345",
                "group_id": 1
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "User already exists"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user",
        "description": "Update user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "int"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/User"
              },
              "example": {
                "name": "teste update"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "There is already a user with the email"
          },
          "500": {
            "description": "User no exists"
          }
        }
      }
    },
    "/institutions": {
      "post": {
        "tags": [
          "Institutions"
        ],
        "summary": "Create a new institution",
        "description": "Create a new institution",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {},
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    }
  },
  "definitions": {
    "Specification": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "int"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "active": {
          "type": "int"
        },
        "identification": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "last_login": {
          "type": "string",
          "format": "date-time"
        },
        "modality_id": {
          "type": "int"
        },
        "course_id": {
          "type": "int"
        },
        "pole_id": {
          "type": "int"
        },
        "institution_id": {
          "type": "int"
        },
        "group_id": {
          "type": "int"
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}